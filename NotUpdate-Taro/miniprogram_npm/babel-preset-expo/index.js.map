{"version":3,"sources":["index.js"],"names":[],"mappingsfile":"index.js","sourcesContent":["module.exports = function(api, options) {\n  const isWeb = api.caller(isTargetWeb);\n\n  if (isWeb) {\n    return getWebConfig(options.web);\n  }\n\n  return getNativeConfig();\n};\n\nfunction getNativeConfig() {\n  return {\n    presets: ['module:metro-react-native-babel-preset'],\n    plugins: [\n      [\n        'babel-plugin-module-resolver',\n        {\n          alias: {\n            'react-native-vector-icons': '@expo/vector-icons',\n          },\n        },\n      ],\n      ['@babel/plugin-proposal-decorators', { legacy: true }],\n    ],\n  };\n}\n\nfunction getWebConfig(options = {}) {\n  const defaultPlugins = [\n    ['@babel/plugin-transform-flow-strip-types'],\n    [\n      'babel-plugin-module-resolver',\n      {\n        alias: {\n          'react-native-vector-icons': '@expo/vector-icons',\n        },\n      },\n    ],\n    ['@babel/plugin-proposal-decorators', { legacy: true }],\n    [\n      '@babel/plugin-proposal-class-properties',\n      // use `this.foo = bar` instead of `this.defineProperty('foo', ...)`\n      { loose: true },\n    ],\n    ['@babel/plugin-syntax-dynamic-import'],\n    ['@babel/plugin-transform-react-jsx'],\n    ['babel-plugin-react-native-web'],\n  ];\n\n  const otherPlugins = [\n    ['@babel/plugin-proposal-export-default-from'],\n    ['@babel/plugin-transform-object-assign'],\n    ['@babel/plugin-proposal-nullish-coalescing-operator', { loose: true }],\n    ['@babel/plugin-proposal-optional-chaining', { loose: true }],\n    ['@babel/plugin-transform-react-display-name'],\n    ['@babel/plugin-transform-react-jsx-source'],\n    options.transformImportExport && ['@babel/plugin-transform-modules-commonjs'],\n  ].filter(Boolean);\n\n  return {\n    comments: false,\n    compact: true,\n\n    presets: [\n      [\n        '@babel/preset-env',\n        {\n          modules: false,\n          targets: {\n            esmodules: true,\n          },\n        },\n      ],\n    ],\n    overrides: [\n      {\n        plugins: defaultPlugins,\n      },\n      {\n        test: isTypeScriptSource,\n        plugins: [['@babel/plugin-transform-typescript', { isTSX: false }]],\n      },\n      {\n        test: isTSXSource,\n        plugins: [['@babel/plugin-transform-typescript', { isTSX: true }]],\n      },\n      {\n        plugins: otherPlugins,\n      },\n    ],\n  };\n}\n\nfunction isTargetWeb(caller) {\n  return caller && caller.name === 'babel-loader';\n}\n\nfunction isTypeScriptSource(fileName) {\n  return !!fileName && fileName.endsWith('.ts');\n}\n\nfunction isTSXSource(fileName) {\n  return !!fileName && fileName.endsWith('.tsx');\n}\n"]}