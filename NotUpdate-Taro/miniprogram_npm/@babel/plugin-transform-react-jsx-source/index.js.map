{"version":3,"sources":["index.js"],"names":[],"mappings":";;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"index.js","sourcesContent":["\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _helperPluginUtils = require(\"@babel/helper-plugin-utils\");\n\nvar _core = require(\"@babel/core\");\n\nconst TRACE_ID = \"__source\";\nconst FILE_NAME_VAR = \"_jsxFileName\";\n\nvar _default = (0, _helperPluginUtils.declare)(api => {\n  api.assertVersion(7);\n\n  function makeTrace(fileNameIdentifier, lineNumber, column0Based) {\n    const fileLineLiteral = lineNumber != null ? _core.types.numericLiteral(lineNumber) : _core.types.nullLiteral();\n    const fileColumnLiteral = column0Based != null ? _core.types.numericLiteral(column0Based + 1) : _core.types.nullLiteral();\n\n    const fileNameProperty = _core.types.objectProperty(_core.types.identifier(\"fileName\"), fileNameIdentifier);\n\n    const lineNumberProperty = _core.types.objectProperty(_core.types.identifier(\"lineNumber\"), fileLineLiteral);\n\n    const columnNumberProperty = _core.types.objectProperty(_core.types.identifier(\"columnNumber\"), fileColumnLiteral);\n\n    return _core.types.objectExpression([fileNameProperty, lineNumberProperty, columnNumberProperty]);\n  }\n\n  const visitor = {\n    JSXOpeningElement(path, state) {\n      const id = _core.types.jsxIdentifier(TRACE_ID);\n\n      const location = path.container.openingElement.loc;\n\n      if (!location) {\n        return;\n      }\n\n      const attributes = path.container.openingElement.attributes;\n\n      for (let i = 0; i < attributes.length; i++) {\n        const name = attributes[i].name;\n\n        if (name && name.name === TRACE_ID) {\n          return;\n        }\n      }\n\n      if (!state.fileNameIdentifier) {\n        const fileName = state.filename || \"\";\n        const fileNameIdentifier = path.scope.generateUidIdentifier(FILE_NAME_VAR);\n        const scope = path.hub.getScope();\n\n        if (scope) {\n          scope.push({\n            id: fileNameIdentifier,\n            init: _core.types.stringLiteral(fileName)\n          });\n        }\n\n        state.fileNameIdentifier = fileNameIdentifier;\n      }\n\n      const trace = makeTrace(state.fileNameIdentifier, location.start.line, location.start.column);\n      attributes.push(_core.types.jsxAttribute(id, _core.types.jsxExpressionContainer(trace)));\n    }\n\n  };\n  return {\n    name: \"transform-react-jsx-source\",\n    visitor\n  };\n});\n\nexports.default = _default;"]}