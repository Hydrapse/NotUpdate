{"version":3,"sources":["index.js"],"names":[],"mappings":";;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"index.js","sourcesContent":["\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _helperPluginUtils = require(\"@babel/helper-plugin-utils\");\n\nfunction removePlugin(plugins, name) {\n  const indices = [];\n  plugins.forEach((plugin, i) => {\n    const n = Array.isArray(plugin) ? plugin[0] : plugin;\n\n    if (n === name) {\n      indices.unshift(i);\n    }\n  });\n\n  for (const i of indices) {\n    plugins.splice(i, 1);\n  }\n}\n\nvar _default = (0, _helperPluginUtils.declare)((api, {\n  isTSX\n}) => {\n  api.assertVersion(7);\n  return {\n    name: \"syntax-typescript\",\n\n    manipulateOptions(opts, parserOpts) {\n      const {\n        plugins\n      } = parserOpts;\n      removePlugin(plugins, \"flow\");\n      removePlugin(plugins, \"jsx\");\n      parserOpts.plugins.push(\"typescript\", \"classProperties\", \"objectRestSpread\");\n\n      if (isTSX) {\n        parserOpts.plugins.push(\"jsx\");\n      }\n    }\n\n  };\n});\n\nexports.default = _default;"]}