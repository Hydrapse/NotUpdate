{"version":3,"sources":["index.js","image-viewer.type.js","image-viewer.style.js"],"names":[],"mappings":";;;;;;;AAAA;AACA;AACA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;AELA,ADGA,ADGA;AELA,ADGA,ADGA;AELA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"index.js","sourcesContent":["\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar image_viewer_component_1 = require(\"./image-viewer.component\");\nexports.ImageViewer = image_viewer_component_1.default;\nvar image_viewer_type_1 = require(\"./image-viewer.type\");\nexports.ImageViewerPropsDefine = image_viewer_type_1.Props;\nexports.default = image_viewer_component_1.default;\n//# sourceMappingURL=index.js.map","\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar React = require(\"react\");\nvar react_native_1 = require(\"react-native\");\nvar image_viewer_style_1 = require(\"./image-viewer.style\");\nvar Props = /** @class */ (function () {\n    function Props() {\n        /**\n         * 是否显示\n         */\n        this.show = false;\n        /**\n         * 图片数组\n         */\n        this.imageUrls = [];\n        /**\n         * 滑动到下一页的X阈值\n         */\n        this.flipThreshold = 80;\n        /**\n         * 当前页能滑到下一页X位置最大值\n         */\n        this.maxOverflow = 300;\n        /**\n         * 初始显示第几张图\n         */\n        this.index = 0;\n        /**\n         * 加载失败的图\n         */\n        this.failImageSource = undefined;\n        /**\n         * 背景颜色\n         */\n        this.backgroundColor = 'black';\n        /**\n         * style props for the footer container\n         */\n        this.footerContainerStyle = {};\n        /**\n         * Menu Context Values\n         */\n        this.menuContext = { saveToLocal: 'save to the album', cancel: 'cancel' };\n        /**\n         * 是否开启长按保存到本地的功能\n         */\n        this.saveToLocalByLongPress = true;\n        /**\n         * 是否允许缩放图片\n         */\n        this.enableImageZoom = true;\n        this.style = {};\n        /**\n         * Enable swipe down to close image viewer.\n         * When swipe down, will trigger onCancel.\n         */\n        this.enableSwipeDown = false;\n        /**\n         * 是否预加载图片\n         */\n        this.enablePreload = false;\n        /**\n         * 翻页时的动画时间\n         */\n        this.pageAnimateTime = 100;\n        /**\n         * 长按图片的回调\n         */\n        this.onLongPress = function () {\n            //\n        };\n        /**\n         * 单击回调\n         */\n        this.onClick = function () {\n            //\n        };\n        /**\n         * 双击回调\n         */\n        this.onDoubleClick = function () {\n            //\n        };\n        /**\n         * 图片保存到本地方法，如果写了这个方法，就不会调取系统默认方法\n         * 针对安卓不支持 saveToCameraRoll 远程图片，可以在安卓调用此回调，调用安卓原生接口\n         */\n        this.onSave = function () {\n            //\n        };\n        this.onMove = function () {\n            //\n        };\n        /**\n         * 自定义头部\n         */\n        this.renderHeader = function () {\n            return null;\n        };\n        /**\n         * 自定义尾部\n         */\n        this.renderFooter = function () {\n            return null;\n        };\n        /**\n         * 自定义计时器\n         */\n        this.renderIndicator = function (currentIndex, allSize) {\n            return React.createElement(react_native_1.View, { style: image_viewer_style_1.simpleStyle.count }, React.createElement(react_native_1.Text, { style: image_viewer_style_1.simpleStyle.countText }, currentIndex + '/' + allSize));\n        };\n        /**\n         * Render image component\n         */\n        this.renderImage = function (props) {\n            return React.createElement(react_native_1.Image, props);\n        };\n        /**\n         * 自定义左翻页按钮\n         */\n        this.renderArrowLeft = function () {\n            return null;\n        };\n        /**\n         * 自定义右翻页按钮\n         */\n        this.renderArrowRight = function () {\n            return null;\n        };\n        /**\n         * 弹出大图的回调\n         */\n        this.onShowModal = function () {\n            //\n        };\n        /**\n         * 取消看图的回调\n         */\n        this.onCancel = function () {\n            //\n        };\n        /**\n         * function that fires when user swipes down\n         */\n        this.onSwipeDown = function () {\n            //\n        };\n        /**\n         * 渲染loading元素\n         */\n        this.loadingRender = function () {\n            return null;\n        };\n        /**\n         * 保存到相册的回调\n         */\n        this.onSaveToCamera = function () {\n            //\n        };\n        /**\n         * 当图片切换时触发\n         */\n        this.onChange = function () {\n            //\n        };\n    }\n    return Props;\n}());\nexports.Props = Props;\nvar State = /** @class */ (function () {\n    function State() {\n        /**\n         * 是否显示\n         */\n        this.show = false;\n        /**\n         * 当前显示第几个\n         */\n        this.currentShowIndex = 0;\n        /**\n         * Used to detect if parent component applied new index prop\n         */\n        this.prevIndexProp = 0;\n        /**\n         * 图片拉取是否完毕了\n         */\n        this.imageLoaded = false;\n        /**\n         * 图片长宽列表\n         */\n        this.imageSizes = [];\n        /**\n         * 是否出现功能菜单\n         */\n        this.isShowMenu = false;\n    }\n    return State;\n}());\nexports.State = State;\n//# sourceMappingURL=image-viewer.type.js.map","\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = (function (width, height, backgroundColor) {\n    return {\n        modalContainer: { backgroundColor: backgroundColor, justifyContent: 'center', alignItems: 'center', overflow: 'hidden' },\n        watchOrigin: { position: 'absolute', width: width, bottom: 20, justifyContent: 'center', alignItems: 'center' },\n        watchOriginTouchable: {\n            paddingLeft: 10,\n            paddingRight: 10,\n            paddingTop: 5,\n            paddingBottom: 5,\n            borderRadius: 30,\n            borderColor: 'white',\n            borderWidth: 0.5,\n            backgroundColor: 'rgba(0, 0, 0, 0.1)'\n        },\n        watchOriginText: { color: 'white', backgroundColor: 'transparent' },\n        imageStyle: {},\n        container: { backgroundColor: backgroundColor },\n        moveBox: { flexDirection: 'row', alignItems: 'center' },\n        menuContainer: { position: 'absolute', width: width, height: height, left: 0, bottom: 0, zIndex: 12 },\n        menuShadow: {\n            position: 'absolute',\n            width: width,\n            height: height,\n            backgroundColor: 'black',\n            left: 0,\n            bottom: 0,\n            opacity: 0.2,\n            zIndex: 10\n        },\n        menuContent: { position: 'absolute', width: width, left: 0, bottom: 0, zIndex: 11 },\n        operateContainer: {\n            justifyContent: 'center',\n            alignItems: 'center',\n            backgroundColor: 'white',\n            height: 40,\n            borderBottomColor: '#ccc',\n            borderBottomWidth: 1\n        },\n        operateText: { color: '#333' },\n        loadingTouchable: { width: width, height: height },\n        loadingContainer: { flex: 1, justifyContent: 'center', alignItems: 'center' },\n        arrowLeftContainer: { position: 'absolute', top: 0, bottom: 0, left: 0, justifyContent: 'center', zIndex: 13 },\n        arrowRightContainer: { position: 'absolute', top: 0, bottom: 0, right: 0, justifyContent: 'center', zIndex: 13 }\n    };\n});\nexports.simpleStyle = {\n    count: {\n        position: 'absolute',\n        left: 0,\n        right: 0,\n        top: 38,\n        zIndex: 13,\n        justifyContent: 'center',\n        alignItems: 'center',\n        backgroundColor: 'transparent'\n    },\n    countText: {\n        color: 'white',\n        fontSize: 16,\n        backgroundColor: 'transparent',\n        textShadowColor: 'rgba(0, 0, 0, 0.3)',\n        textShadowOffset: {\n            width: 0,\n            height: 0.5\n        },\n        textShadowRadius: 0\n    }\n};\n//# sourceMappingURL=image-viewer.style.js.map"]}