{"version":3,"sources":["index.js","configs/main.js","transforms/transform-symbol-member.js"],"names":[],"mappings":";;;;;;;AAAA;AACA;AACA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA,AENA;ADIA,ADGA,AENA;ADIA,ADGA,AENA;ADIA,ADGA,AENA;ADIA,ADGA,AENA;ADIA,ADGA,AENA;ADIA,ADGA,AENA;ADIA,ADGA,AENA;ADIA,ADGA,AENA;ADIA,ADGA,AENA;ADIA,ADGA,AENA;ADIA,ADGA,AENA;ADIA,ACHA;ADIA,ACHA;ADIA,ACHA;ADIA,ACHA;ADIA,ACHA;ADIA,ACHA;ADIA,ACHA;ADIA,ACHA;ADIA,ACHA;ADIA,ACHA;ADIA,ACHA;ADIA,ACHA;ADIA,ACHA;ADIA,ACHA;ADIA,ACHA;ADIA,ACHA;ADIA,ACHA;ADIA,ACHA;ADIA,ACHA;ADIA,ACHA;ADIA,ACHA;ADIA,ACHA;ADIA,ACHA;ADIA,ACHA;ADIA,ACHA;ADIA,ACHA;ADIA,ACHA;ADIA,ACHA;ADIA,ACHA;ADIA,ACHA;ADIA,ACHA;ADIA,ACHA;ADIA,ACHA;ADIA,ACHA;ADIA,ACHA;ADIA,ACHA;ADIA,ACHA;ADIA,ACHA;ADIA,ACHA;ADIA,ACHA;ADIA,ACHA;ADIA,ACHA;ADIA,ACHA;ADIA,ACHA;ADIA,ACHA;ADIA,ACHA;ADIA,ACHA;ADIA,ACHA;ADIA,ACHA;ADIA,ACHA;ADIA,ACHA;ADIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"index.js","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n */\n\n\nconst main = require(\"./configs/main\");\n\nmodule.exports = function(babel, options) {\n  return main(options);\n};\n\nmodule.exports.getPreset = main.getPreset;\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n */\n\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n    var ownKeys = Object.keys(source);\n    if (typeof Object.getOwnPropertySymbols === \"function\") {\n      ownKeys = ownKeys.concat(\n        Object.getOwnPropertySymbols(source).filter(function(sym) {\n          return Object.getOwnPropertyDescriptor(source, sym).enumerable;\n        })\n      );\n    }\n    ownKeys.forEach(function(key) {\n      _defineProperty(target, key, source[key]);\n    });\n  }\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\n\nfunction isTypeScriptSource(fileName) {\n  return !!fileName && fileName.endsWith(\".ts\");\n}\n\nfunction isTSXSource(fileName) {\n  return !!fileName && fileName.endsWith(\".tsx\");\n}\n\nconst defaultPlugins = [\n  [require(\"@babel/plugin-proposal-optional-catch-binding\")],\n  [require(\"@babel/plugin-transform-block-scoping\")], // the flow strip types plugin must go BEFORE class properties!\n  // there'll be a test case that fails if you don't.\n  [require(\"@babel/plugin-transform-flow-strip-types\")],\n  [\n    require(\"@babel/plugin-proposal-class-properties\"), // use `this.foo = bar` instead of `this.defineProperty('foo', ...)`\n    {\n      loose: true\n    }\n  ],\n  [require(\"@babel/plugin-syntax-dynamic-import\")],\n  [require(\"@babel/plugin-syntax-export-default-from\")],\n  [require(\"@babel/plugin-transform-computed-properties\")],\n  [require(\"@babel/plugin-transform-destructuring\")],\n  [require(\"@babel/plugin-transform-function-name\")],\n  [require(\"@babel/plugin-transform-literals\")],\n  [require(\"@babel/plugin-transform-parameters\")],\n  [require(\"@babel/plugin-transform-shorthand-properties\")],\n  [require(\"@babel/plugin-transform-react-jsx\")],\n  [require(\"@babel/plugin-transform-regenerator\")],\n  [require(\"@babel/plugin-transform-sticky-regex\")],\n  [require(\"@babel/plugin-transform-unicode-regex\")]\n];\nconst es2015ArrowFunctions = [\n  require(\"@babel/plugin-transform-arrow-functions\")\n];\nconst es2015Classes = [require(\"@babel/plugin-transform-classes\")];\nconst es2015ForOf = [\n  require(\"@babel/plugin-transform-for-of\"),\n  {\n    loose: true\n  }\n];\nconst es2015Spread = [require(\"@babel/plugin-transform-spread\")];\nconst es2015TemplateLiterals = [\n  require(\"@babel/plugin-transform-template-literals\"),\n  {\n    loose: true\n  }\n];\nconst exponentiationOperator = [\n  require(\"@babel/plugin-transform-exponentiation-operator\")\n];\nconst objectAssign = [require(\"@babel/plugin-transform-object-assign\")];\nconst objectRestSpread = [require(\"@babel/plugin-proposal-object-rest-spread\")];\nconst nullishCoalescingOperator = [\n  require(\"@babel/plugin-proposal-nullish-coalescing-operator\"),\n  {\n    loose: true\n  }\n];\nconst optionalChaining = [\n  require(\"@babel/plugin-proposal-optional-chaining\"),\n  {\n    loose: true\n  }\n];\nconst reactDisplayName = [\n  require(\"@babel/plugin-transform-react-display-name\")\n];\nconst reactJsxSource = [require(\"@babel/plugin-transform-react-jsx-source\")];\nconst symbolMember = [require(\"../transforms/transform-symbol-member\")];\nconst babelRuntime = [\n  require(\"@babel/plugin-transform-runtime\"),\n  {\n    helpers: true,\n    regenerator: true\n  }\n];\n\nconst getPreset = (src, options) => {\n  const isNull = src == null;\n  const hasClass = isNull || src.indexOf(\"class\") !== -1;\n  const hasForOf =\n    isNull || (src.indexOf(\"for\") !== -1 && src.indexOf(\"of\") !== -1);\n  const extraPlugins = [];\n\n  if (!options || !options.disableImportExportTransform) {\n    extraPlugins.push(\n      [require(\"@babel/plugin-proposal-export-default-from\")],\n      [\n        require(\"@babel/plugin-transform-modules-commonjs\"),\n        {\n          strict: false,\n          strictMode: false,\n          // prevent \"use strict\" injections\n          lazy: !!(options && options.lazyImportExportTransform),\n          allowTopLevelThis: true // dont rewrite global `this` -> `undefined`\n        }\n      ]\n    );\n  }\n\n  if (!options || !options.lazyCommonJS) {\n  }\n\n  if (hasClass) {\n    extraPlugins.push(es2015Classes);\n  }\n\n  if (isNull || src.indexOf(\"=>\") !== -1) {\n    extraPlugins.push(es2015ArrowFunctions);\n  }\n\n  if (isNull || hasClass || src.indexOf(\"...\") !== -1) {\n    extraPlugins.push(es2015Spread);\n    extraPlugins.push(objectRestSpread);\n  }\n\n  if (isNull || src.indexOf(\"`\") !== -1) {\n    extraPlugins.push(es2015TemplateLiterals);\n  }\n\n  if (isNull || src.indexOf(\"**\") !== -1) {\n    extraPlugins.push(exponentiationOperator);\n  }\n\n  if (isNull || src.indexOf(\"Object.assign\") !== -1) {\n    extraPlugins.push(objectAssign);\n  }\n\n  if (hasForOf) {\n    extraPlugins.push(es2015ForOf);\n  }\n\n  if (hasForOf || src.indexOf(\"Symbol\") !== -1) {\n    extraPlugins.push(symbolMember);\n  }\n\n  if (\n    isNull ||\n    src.indexOf(\"React.createClass\") !== -1 ||\n    src.indexOf(\"createReactClass\") !== -1\n  ) {\n    extraPlugins.push(reactDisplayName);\n  }\n\n  if (isNull || src.indexOf(\"?.\") !== -1) {\n    extraPlugins.push(optionalChaining);\n  }\n\n  if (isNull || src.indexOf(\"??\") !== -1) {\n    extraPlugins.push(nullishCoalescingOperator);\n  }\n\n  if (options && options.dev) {\n    extraPlugins.push(reactJsxSource);\n  }\n\n  if (!options || options.enableBabelRuntime !== false) {\n    extraPlugins.push(babelRuntime);\n  }\n\n  return {\n    comments: false,\n    compact: true,\n    overrides: [\n      {\n        plugins: defaultPlugins\n      },\n      {\n        test: isTypeScriptSource,\n        plugins: [\n          [\n            require(\"@babel/plugin-transform-typescript\"),\n            {\n              isTSX: false\n            }\n          ]\n        ]\n      },\n      {\n        test: isTSXSource,\n        plugins: [\n          [\n            require(\"@babel/plugin-transform-typescript\"),\n            {\n              isTSX: true\n            }\n          ]\n        ]\n      },\n      {\n        plugins: extraPlugins\n      }\n    ]\n  };\n};\n\nmodule.exports = options => {\n  if (options.withDevTools == null) {\n    const env = process.env.BABEL_ENV || process.env.NODE_ENV;\n\n    if (!env || env === \"development\") {\n      return getPreset(\n        null,\n        _objectSpread({}, options, {\n          dev: true\n        })\n      );\n    }\n  }\n\n  return getPreset(null, options);\n};\n\nmodule.exports.getPreset = getPreset;\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n */\n\n/*eslint consistent-return: 0*/\n\n/**\n * Transforms function properties of the `Symbol` into\n * the presence check, and fallback string \"@@<name>\".\n *\n * Example:\n *\n *   Symbol.iterator;\n *\n * Transformed to:\n *\n *   typeof Symbol === 'function' ? Symbol.iterator : '@@iterator';\n */\n\nmodule.exports = function symbolMember(babel) {\n  const t = babel.types;\n  return {\n    visitor: {\n      MemberExpression(path) {\n        if (!isAppropriateMember(path)) {\n          return;\n        }\n\n        const node = path.node;\n        path.replaceWith(\n          t.conditionalExpression(\n            t.binaryExpression(\n              \"===\",\n              t.unaryExpression(\"typeof\", t.identifier(\"Symbol\"), true),\n              t.stringLiteral(\"function\")\n            ),\n            node,\n            t.stringLiteral(`@@${node.property.name}`)\n          )\n        ); // We should stop to avoid infinite recursion, since Babel\n        // traverses replaced path, and again would hit our transform.\n\n        path.stop();\n      }\n    }\n  };\n};\n\nfunction isAppropriateMember(path) {\n  const node = path.node;\n  return (\n    path.parentPath.type !== \"AssignmentExpression\" &&\n    node.object.type === \"Identifier\" &&\n    node.object.name === \"Symbol\" &&\n    node.property.type === \"Identifier\"\n  );\n}\n"]}